name: test actions
on:
  schedule:
    - cron: '30 6 * * *'  # Run daily at 7.30AM UTC
  workflow_dispatch:  # Allow manual triggering
  push:
    paths:
      - .github/workflows/test-PR.yml
    branches:
      - master

env:
  GIT_COMMIT_EMAIL: angelo.neacsu-bot@gmail.com
  GIT_COMMIT_NAME: Angelo Neacsu Bot
  BASE_BRANCH: master
  GH_TOKEN: ${{ secrets.PAT_FOR_PR_CREATION }}
jobs:
  test_job:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    # environment:
    #   name: main
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Check if any PR exists from branches starting with 'upgrade-'
        id: check_pr
        run: |
          gh pr list --state open --json headRefName --jq '.[] | select(.headRefName | startswith("upgrade-java")) | .headRefName'
          EXISTS=$(gh pr list --state open --json headRefName --jq '.[] | select(.headRefName | startswith("upgrade-java")) | .headRefName')
          if [ -z "$EXISTS" ]; then
            echo "pr_exists=false" >> $GITHUB_ENV
            echo "=== No PR exists yet ==="
          else
            echo "pr_exists=true" >> $GITHUB_ENV
            echo "EXISTING_BRANCH=$EXISTS" >> $GITHUB_ENV
            
            PR_NUMBER=$(gh pr list --state open --head $EXISTS --json number --jq '.[].number')
            echo "!!! There is already a PR ($PR_NUMBER) from $EXISTS to $BASE_BRANCH !!! Skipping updating Dockerfile and skip creating PR..."
            
            
            echo "Adding comments to the existing PR $PR_NUMBER... "
            gh pr comment $PR_NUMBER --body "This PR is obsolete and should be closed. Existing '$EXISTS' branch is old."
          fi

      - name: Update Dockerfile and Create PR
        if: steps.check_pr.outputs.pr_exists == 'false'
        id: update-dockerfile
        run: |
          # Configure git
          git config --local user.email "angelo.neacsu-bot@gmail.com"
          git config --local user.name "Angelo Neacsu Bot"
          
          echo "# Create and checkout new branch"
          NEW_BRANCH="upgrade-java-$(date +'%Y%m%d%H%M%S')"
          git checkout -b $NEW_BRANCH
          
          echo "# Create dummy file"
          echo "test" > dummy
          
          echo "# Add dummy file"
          git add dummy
          
          echo "# Commit changes"
          git commit -m "Added dummy"
          
          echo "# Push the new branch"
          git push origin $NEW_BRANCH
          
          echo "# Create a pull request"
          gh pr create -B "master" -H "$NEW_BRANCH" --title "Merge $NEW_BRANCH into ${{ env.BASE_BRANCH }}" --body 'Created by Github action'
