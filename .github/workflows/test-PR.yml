name: test actions
on:
  schedule:
    - cron: '30 6 * * *'  # Run daily at 7.30AM UTC
  workflow_dispatch:  # Allow manual triggering

env:
  GIT_COMMIT_EMAIL: angelo.neacsu-bot@gmail.com
  GIT_COMMIT_NAME: Angelo Neacsu Bot
jobs:
  test_job:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    environment:
      name: main
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3
      - name: Create PR for Dockerfile update
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git
          git config --local user.email "${{ env.GIT_COMMIT_EMAIL }}"
          git config --local user.name "${{ env.GIT_COMMIT_NAME }}"

          # Create and checkout new branch
          NEW_BRANCH="upgrade-java-$(date +'%Y%m%d%H%M%S')"
          git checkout -b $NEW_BRANCH

          # Create dummy file
          echo "test" > dummy
          
          # Add dummy file
          git add dummy

          # Prepare commit message and PR body
          COMMIT_MSG="Update Java version(s) in Dockerfile"
          PR_BODY="This PR updates the following Java version(s) in the Dockerfile:\n\n"

          if [ "${{ steps.update8-dockerfile.outputs.CHANGES_MADE }}" == "true" ]; then
            PR_BODY+="- JDK 8: ${{ steps.get-latest8-release.outputs.LATEST_VERSION }}\n"
            COMMIT_MSG+=", JDK 8"
          fi

          PR_BODY+="\nThe Docker image has been built and pushed successfully with these updates."
          PR_BODY+="\nDocker image tag: ${{ steps.build-push.outputs.DOCKER_TAG }}"

          # Commit changes
          git commit -m "${COMMIT_MSG#, }"  # Remove leading comma and space

          # Push the new branch
          git push origin $NEW_BRANCH

          # Create Pull Request
          PR_TITLE="${COMMIT_MSG#, }"  # Use commit message as PR title, removing leading comma and space

          # Use gh CLI to create PR
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d '{
              "title":"'"${PR_TITLE}"'",
              "body":"'"${PR_BODY}"'",
              "head":"'"${NEW_BRANCH}"'",
              "base":"main"
            }'
